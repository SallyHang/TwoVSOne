{"version":3,"sources":["click.js"],"names":["cc","Class","extends","Component","properties","chessPrefab","default","type","Prefab","touchChess","Node","visible","whiteSpriteFrame","SpriteFrame","blackSpriteFrame","setInputControl","self","chessposition","chessList","y","x","newNode","instantiate","node","addChild","setPosition","p","width","height","setContentSize","opacity","on","EventType","MOUSE_DOWN","event","distance","i","console","log","getLocation","convertToWorldSpaceAR","getPosition","d","pDistance","v2","getLocationX","getLocationY","push","min","minpos","j","start"],"mappings":"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","file":"click.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        chessPrefab:{//棋子的预制资源\r\n            default:null,\r\n            type:cc.Prefab\r\n        },\r\n        \r\n        //chessList:{//棋子节点的集合，用一维数组表示二维位置\r\n        //    default: [],\r\n        //    type: []\r\n        //},\r\n\r\n        touchChess:{//每一回合落下的棋子\r\n            default:null,\r\n            type:cc.Node,\r\n            visible:false//属性窗口不显示\r\n        },\r\n \r\n        whiteSpriteFrame:{//白棋的图片\r\n            default:null,\r\n            type:cc.SpriteFrame\r\n        },\r\n \r\n        blackSpriteFrame:{//黑棋的图片\r\n            default:null,\r\n            type:cc.SpriteFrame\r\n        },\r\n    },\r\n    setInputControl: function () {\r\n        var self = this;\r\n        var chessposition=[];//下标从0开始\r\n        var chessList = [cc.Node];//下标从1开始           \r\n        for(var y = 0;y<5;y++){\r\n            for(var x = 0;x < 5;x++){\r\n                var newNode = cc.instantiate(this.chessPrefab);//复制Chess预制资源\r\n                this.node.addChild(newNode);\r\n                newNode.setPosition(cc.p(x*(this.node.width/4),y*(this.node.height/4)));//根据棋盘和棋子大小计算使每个棋子节点位于指定位置\r\n                newNode.setContentSize(this.node.width/8, this.node.height/8);\r\n                newNode.opacity = 0;\r\n                //console.log(newNode.getPosition());\r\n                //this.node.children.opacity = 128;\r\n                //this.newnode.opacity = 128;\r\n                //newNode.tag = y*15+x;//根据每个节点的tag就可以算出其二维坐标\r\n                newNode.on(cc.Node.EventType.MOUSE_DOWN,function(event){\r\n                    var distance = []; \r\n                    //将鼠标点击点的坐标转换为相对锚点的坐标\r\n                    //var WposAR = this.node.convertToWorldSpaceAR(cc.p(0,0));\r\n\r\n                    for(var i = 0;i<25;i++){\r\n                        //计算鼠标点击位置和各棋子节点之间的距离\r\n                        console.log(event.getLocation());\r\n                        console.log(chessList[i+1].convertToWorldSpaceAR(chessList[i+1].getPosition()));\r\n                        console.log(chessList[i+1].getPosition());\r\n                        var d = cc.pDistance(cc.v2(event.getLocationX(), event.getLocationY()), chessList[i+1].convertToWorldSpaceAR(cc.v2(0, 0)));\r\n                        distance.push(d);\r\n                        console.log(d);\r\n                    };\r\n                    //console.log(distance);\r\n                    var min = distance[0];\r\n                    var minpos = 0;\r\n                    \r\n                    for(var j = 1;j<25;j++){                        \r\n                        if(distance[j]<min){\r\n                            min = distance[j]\r\n                            minpos = j;\r\n                        }\r\n                    }\r\n                    //var d = cc.pDistance(cc.p(0, 0), cc.p(10, 10));\r\n                    console.log(minpos);\r\n                    //event.getLocationX\r\n                    chessList[minpos+1].opacity = 255;\r\n                });\r\n                chessList.push(newNode);\r\n                chessposition.push(newNode.getPosition());\r\n                //console.log(chessList);\r\n            };\r\n        };\r\n        //console.log(chessposition);\r\n        //console.log(chessposition[1].x);\r\n        // 添加鼠标事件监听\r\n        // 按下鼠标时落子\r\n        /*this.node.on('mousedown', function ( event ) {\r\n            cc.loader.loadRes(\"blackchess\", cc.SpriteFrame, function (err, blackSpriteFrame) {\r\n                self.node.getComponent(cc.Sprite).spriteFrame = blackSpriteFrame;\r\n            });\r\n        });*/\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        this.setInputControl();\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}