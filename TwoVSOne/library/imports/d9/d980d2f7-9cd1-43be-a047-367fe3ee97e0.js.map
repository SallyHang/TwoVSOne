{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\chessinit.js"],"names":["Game","cc","Class","extends","Component","properties","chessPrefab","default","type","Prefab","whitechessPrefab","selectchess","event","chessList","distance","i","d","pDistance","v2","getLocationX","getLocationY","convertToWorldSpaceAR","push","min","minpos","j","chessinit","self","Node","y","x","newNode","instantiate","node","addChild","setPosition","p","width","height","setContentSize","opacity","on","EventType","MOUSE_DOWN","game","chessNode","getComponent","Sprite","spriteFrame","SpriteFrame","url","raw","start"],"mappings":"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","file":"chessinit.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["var Game = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        chessPrefab: {//棋子的预制资源\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        whitechessPrefab: {//棋子的预制资源\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n    },\r\n    //返回点击的棋子节点\r\n    selectchess(event,chessList) {\r\n        var distance = [];\r\n        for (var i = 0; i < 25; i++) {\r\n            //计算鼠标点击位置和各棋子节点之间的距离\r\n            //将棋子节点的坐标转化为世界坐标系\r\n            var d = cc.pDistance(cc.v2(event.getLocationX(), event.getLocationY()), chessList[i + 1].convertToWorldSpaceAR(cc.v2(0, 0)));\r\n            distance.push(d);\r\n        };\r\n        var min = distance[0];\r\n        var minpos = 0;\r\n        //取距离最近的下标，即棋子节点位置\r\n        for (var j = 1; j < 25; j++) {\r\n            if (distance[j] < min) {\r\n                min = distance[j]\r\n                minpos = j;\r\n            }\r\n        }\r\n\r\n        return minpos;\r\n    },\r\n    chessinit() {\r\n        var self = this;\r\n        var chessList = [cc.Node];//棋子从下标1开始           \r\n        for (var y = 0; y < 5; y++) {\r\n            for (var x = 0; x < 5; x++) {\r\n                var newNode = cc.instantiate(this.chessPrefab);//复制Chess预制资源\r\n                this.node.addChild(newNode);\r\n                newNode.setPosition(cc.p(x * (this.node.width / 4), y * (this.node.height / 4)));//根据棋盘和棋子大小计算使每个棋子节点位于指定位置\r\n                newNode.setContentSize(this.node.width / 6, this.node.height / 6);\r\n                newNode.opacity = 0;\r\n                chessList.push(newNode);\r\n                newNode.on(cc.Node.EventType.MOUSE_DOWN, function (event) {\r\n                    //为了调用类里面的静态方法，需要将类实例化\r\n                    var game = new Game();\r\n                    var chessNode = game.selectchess(event,chessList);\r\n                    //显示此棋子节点 节点从1开始 所以需要+1\r\n                    if (chessList[chessNode + 1].getComponent(cc.Sprite).spriteFrame != null) {\r\n                        chessList[chessNode + 1].getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(cc.url.raw('resources/clickwhite.png'));\r\n                    }\r\n                });\r\n            };\r\n        };\r\n        for (var i = 0; i < 5; i++) {\r\n            chessList[i + 1].opacity = 255;\r\n            //chessList[25-i].opacity = 255;\r\n            chessList[25 - i].getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(cc.url.raw('resources/whitechess.png'));\r\n            chessList[25 - i].opacity = 255;\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start() {\r\n        this.chessinit();\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}