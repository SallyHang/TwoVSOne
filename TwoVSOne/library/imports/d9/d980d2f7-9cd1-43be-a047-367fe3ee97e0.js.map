{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\chessinit.js"],"names":["cc","Class","extends","Component","properties","chessPrefab","default","type","Prefab","whitechessPrefab","chessinit","self","chessList","Node","y","x","newNode","instantiate","node","addChild","setPosition","p","width","height","setContentSize","opacity","push","on","EventType","MOUSE_DOWN","event","distance","i","d","pDistance","v2","getLocationX","getLocationY","convertToWorldSpaceAR","min","minpos","j","getComponent","Sprite","spriteFrame","SpriteFrame","url","raw","start"],"mappings":"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","file":"chessinit.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        chessPrefab: {//棋子的预制资源\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        whitechessPrefab: {//棋子的预制资源\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n    },\r\n    chessinit() {\r\n        var self = this;\r\n        var chessList = [cc.Node];//棋子从下标1开始           \r\n        for (var y = 0; y < 5; y++) {\r\n            for (var x = 0; x < 5; x++) {\r\n                //****start 获取鼠标点击的棋子节点\r\n                var newNode = cc.instantiate(this.chessPrefab);//复制Chess预制资源\r\n                this.node.addChild(newNode);\r\n                newNode.setPosition(cc.p(x * (this.node.width / 4), y * (this.node.height / 4)));//根据棋盘和棋子大小计算使每个棋子节点位于指定位置\r\n                newNode.setContentSize(this.node.width / 6, this.node.height / 6);\r\n                newNode.opacity = 0;\r\n                chessList.push(newNode);\r\n                newNode.on(cc.Node.EventType.MOUSE_DOWN, function (event) {\r\n                    var distance = [];\r\n                    for (var i = 0; i < 25; i++) {\r\n                        //计算鼠标点击位置和各棋子节点之间的距离\r\n                        //将棋子节点的坐标转化为世界坐标系\r\n                        var d = cc.pDistance(cc.v2(event.getLocationX(), event.getLocationY()), chessList[i + 1].convertToWorldSpaceAR(cc.v2(0, 0)));\r\n                        distance.push(d);\r\n                    };\r\n                    var min = distance[0];\r\n                    var minpos = 0;\r\n                    //取距离最近的下标，即棋子节点位置\r\n                    for (var j = 1; j < 25; j++) {\r\n                        if (distance[j] < min) {\r\n                            min = distance[j]\r\n                            minpos = j;\r\n                        }\r\n                    }\r\n                    //***** end 返回minpos\r\n                    //显示此棋子节点\r\n                    if (chessList[minpos + 1].getComponent(cc.Sprite).spriteFrame != null) {\r\n                        chessList[minpos + 1].getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(cc.url.raw('resources/clickwhite.png'));\r\n                    }\r\n                });\r\n            };\r\n        };\r\n        for (var i = 0; i < 5; i++) {\r\n            chessList[i + 1].opacity = 255;\r\n            //chessList[25-i].opacity = 255;\r\n            chessList[25 - i].getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(cc.url.raw('resources/whitechess.png'));\r\n            chessList[25 - i].opacity = 255;\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start() {\r\n        this.chessinit();\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}