{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\chessinit.js"],"names":["Game","cc","Class","extends","Component","properties","chessPrefab","default","type","Prefab","occupied","occupiedcolor","gameState","lastNode","prepare","directionX","directionY","whitenum","blacknum","overSprite","Sprite","overLabel","Label","ctor","selectchess","event","chessList","distance","i","d","pDistance","v2","getLocationX","getLocationY","convertToWorldSpaceAR","push","min","minpos","j","sortchesss","game","theThree","sort","a","b","console","log","opacity","k","length","splice","eatchess","chessNode","count","flag","temp","s","parseInt","r","indexOf","b_oncemore","director","loadScene","judgeover","self","string","node","x","chessinit","Node","y","newNode","instantiate","addChild","setPosition","p","width","height","setContentSize","on","EventType","MOUSE_DOWN","position","Math","max","alert","getComponent","spriteFrame","SpriteFrame","url","raw","start"],"mappings":"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","file":"chessinit.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["var Game = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        chessPrefab: {//棋子的预制资源\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        occupied: {//记录当前棋盘中被占用的节点位置\r\n            default: []\r\n        },\r\n        occupiedcolor: {//记录当前棋盘中被占用的节点颜色 0：无子 1：白色 2：黑色\r\n            default: []\r\n        },\r\n        gameState: {// 游戏顺序\r\n            default: 'white'\r\n        },\r\n        lastNode: {// 上一步棋子位置\r\n            default: 0\r\n        },\r\n        prepare: {// 是否是准备走棋子 0：否 1：是\r\n            default: 0\r\n        },\r\n        directionX: {//X轴\r\n            default: []\r\n        },\r\n        directionY: {//Y轴\r\n            default: []\r\n        },\r\n        whitenum: {//白色棋子颜色\r\n            default: 5\r\n        },\r\n        blacknum: {//黑色棋子颜色\r\n            default: 5\r\n        },\r\n        //结束页面\r\n        overSprite:{\r\n            default:null,\r\n            type:cc.Sprite,\r\n        },\r\n        overLabel:{\r\n          default:null,\r\n          type:cc.Label\r\n        },\r\n    },\r\n    //构造函数\r\n    ctor: function () {\r\n        // 声明实例变量并赋默认值\r\n        this.occupied = [1, 2, 3, 4, 5, 21, 22, 23, 24, 25];\r\n        this.occupiedcolor = [0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1];\r\n        this.directionX = [1, -1];\r\n        this.directionY = [5, -5];\r\n    },\r\n    //返回点击的棋子节点\r\n    selectchess(event, chessList) {\r\n        var distance = [];\r\n        for (var i = 0; i < 25; i++) {\r\n            //计算鼠标点击位置和各棋子节点之间的距离\r\n            //将棋子节点的坐标转化为世界坐标系\r\n            var d = cc.pDistance(cc.v2(event.getLocationX(), event.getLocationY()), chessList[i + 1].convertToWorldSpaceAR(cc.v2(0, 0)));\r\n            distance.push(d);\r\n        };\r\n        var min = distance[0];\r\n        var minpos = 0;\r\n        //取距离最近的下标，即棋子节点位置\r\n        for (var j = 1; j < 25; j++) {\r\n            if (distance[j] < min) {\r\n                min = distance[j]\r\n                minpos = j;\r\n            }\r\n        }\r\n\r\n        return minpos;\r\n    },\r\n    //重新排序连续的三个棋子并判断哪个被吃掉 在eatchess()中被调用\r\n    sortchesss(game, chessList, theThree) {\r\n        theThree = theThree.sort(function (a, b) { return a - b; });//实现数组中按照数字大小排序\r\n        console.log('theThreeX:' + theThree);\r\n        if (game.occupiedcolor[theThree[0]] == game.occupiedcolor[theThree[1]]) {\r\n            if (game.occupiedcolor[theThree[1]] != game.occupiedcolor[theThree[2]]) {\r\n                chessList[theThree[2]].opacity = 0;\r\n                if (game.occupiedcolor[theThree[2]] == 1) {\r\n                    game.whitenum--;\r\n                } else {\r\n                    game.blacknum--;\r\n                }\r\n                game.occupiedcolor[theThree[2]] = 0;\r\n                for (var k = 0; k < game.occupied.length; k++) {\r\n                    if (game.occupied[k] == theThree[2]) {\r\n                        game.occupied.splice(k, 1);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (game.occupiedcolor[theThree[1]] == game.occupiedcolor[theThree[2]]) {\r\n                chessList[theThree[0]].opacity = 0;\r\n                if (game.occupiedcolor[theThree[0]] == 1) {\r\n                    game.whitenum--;\r\n                } else {\r\n                    game.blacknum--;\r\n                }\r\n                game.occupiedcolor[theThree[0]] = 0;\r\n                for (var k = 0; k < game.occupied.length; k++) {\r\n                    if (game.occupied[k] == theThree[0]) {\r\n                        game.occupied.splice(k, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //判断是否吃子 在主程序中调用\r\n    eatchess(chessNode, game, chessList) {\r\n        var count = 1;\r\n        var flag = true;\r\n        var temp = chessNode;\r\n        var s = parseInt((chessNode - 1) / 5);//取除数用于判断x轴棋子所在范围\r\n        var r = (chessNode % 5 == 0) ? 5 : chessNode % 5;//取余数用于判断y轴棋子所在范围\r\n        //X轴 j=0 X右侧；j=1 X左侧\r\n        for (var j = 0; j < 2; j++) {\r\n            //flag = true;\r\n            temp = temp + game.directionX[j];\r\n            while (temp > s * 5 && temp <= (s + 1) * 5) {\r\n                if (game.occupied.indexOf(temp) != -1) {\r\n                    count++;\r\n                    temp = temp + game.directionX[j];\r\n                } else {\r\n                    temp = temp + game.directionX[j];\r\n                }\r\n            }\r\n            temp = chessNode;\r\n        }\r\n        if (count == 3) {//判断这三个棋子是否连续\r\n            var theThree = [];\r\n            count = 1;\r\n            temp = chessNode;\r\n            flag = true;\r\n            theThree.push(temp);\r\n            for (var j = 0; j < 2; j++) {\r\n                temp = temp + game.directionX[j];\r\n                flag = true;\r\n                while (flag && temp > s * 5 && temp <= (s + 1) * 5) {\r\n\r\n                    if (game.occupied.indexOf(temp) != -1) {\r\n                        theThree.push(temp);\r\n                        count++;\r\n                        temp = temp + game.directionX[j];\r\n                    } else {\r\n                        flag = false;\r\n                    }\r\n                }\r\n                temp = chessNode;\r\n            }\r\n            if (count == 3) {//重新排列这三个连续的棋子，将颜色不同的那个吃掉\r\n                game.sortchesss(game, chessList, theThree);\r\n            }\r\n        }\r\n        count = 1;\r\n        temp = chessNode;\r\n        //y轴 j=0 y右侧；j=1 y左侧\r\n        for (var j = 0; j < 2; j++) {\r\n            //flag = true;\r\n            while (temp >= r && temp <= 20 + r) {\r\n                temp = temp + game.directionY[j];\r\n                if (game.occupied.indexOf(temp) != -1) {\r\n                    count++;\r\n                    //console.log('countY:' + count);\r\n                } else {\r\n                    //flag = false;\r\n                }\r\n            }\r\n            temp = chessNode;\r\n        }\r\n        if (count == 3) {//判断这三个棋子是否连续\r\n            var theThree = [];\r\n            count = 1;\r\n            temp = chessNode;\r\n            flag = true;\r\n            theThree.push(temp);\r\n            for (var j = 0; j < 2; j++) {\r\n                flag = true;\r\n                while (flag && temp >= r && temp <= 20 + r) {\r\n                    temp = temp + game.directionY[j];\r\n                    if (game.occupied.indexOf(temp) != -1) {\r\n                        theThree.push(temp);\r\n                        count++;\r\n                    } else {\r\n                        flag = false;\r\n                    }\r\n                }\r\n                temp = chessNode;\r\n            }\r\n            if (count == 3) {//重新排列这三个连续的棋子，将颜色不同的那个吃掉\r\n                game.sortchesss(game, chessList, theThree);\r\n            }\r\n        }\r\n    },\r\n    b_oncemore(){\r\n        cc.director.loadScene(\"game\");//切换场景到结束场景\r\n    },\r\n    judgeover(game,self) {\r\n        if (game.whitenum == 1) {        \r\n            self.overLabel.string = \"黑子获胜\";\r\n            self.overSprite.node.x = 0;\r\n            game.gameState = 'over';\r\n        }\r\n        if (game.blacknum == 1) {       \r\n            self.overLabel.string = \"白子获胜\";\r\n            self.overSprite.node.x = 0;\r\n            game.gameState = 'over';\r\n        }\r\n    },\r\n    chessinit() {\r\n        this.overSprite.node.x = 10000;//让结束画面位于屏幕外\r\n        var self = this;\r\n        var chessList = [cc.Node];//棋子从下标1开始           \r\n        for (var y = 0; y < 5; y++) {\r\n            for (var x = 0; x < 5; x++) {\r\n                var newNode = cc.instantiate(this.chessPrefab);//复制Chess预制资源\r\n                //为了调用类里面的静态方法，需要将类实例化\r\n                var game = new Game();\r\n                this.node.addChild(newNode);\r\n                newNode.setPosition(cc.p(x * (this.node.width / 4), y * (this.node.height / 4)));//根据棋盘和棋子大小计算使每个棋子节点位于指定位置\r\n                newNode.setContentSize(this.node.width / 6, this.node.height / 6);\r\n                newNode.opacity = 0;\r\n                chessList.push(newNode);\r\n                newNode.on(cc.Node.EventType.MOUSE_DOWN, function (event) {\r\n                    console.log(game.gameState);\r\n                    console.log(game.prepare);\r\n                    //显示此棋子节点 节点从1开始 所以需要+1\r\n                    var chessNode = game.selectchess(event, chessList) + 1;\r\n                    //点击棋子变为半透明状态 若已经存在半透明棋子则不能再将其他棋子变为半透明\r\n                    if (chessList[chessNode].opacity != 0 && game.prepare == 0 && game.gameState != 'over') {\r\n                        chessList[chessNode].opacity = 128;\r\n                        game.prepare = 1;\r\n                        game.lastNode = chessNode;\r\n                        //cc.director.loadScene(\"game\");//切换场景到结束场景\r\n                    } else {\r\n                        console.log(game.occupied);\r\n                        console.log(game.occupied.indexOf(chessNode));\r\n                        if (game.prepare == 1 && game.occupied.indexOf(chessNode) == -1 && game.gameState != 'over') {\r\n                            if (game.lastNode != 0) {//判断不能跨棋子移动\r\n                                if (chessList[chessNode].position.x == chessList[game.lastNode].position.x) {\r\n                                    var min = Math.min(chessNode, game.lastNode) + 5;\r\n                                    var max = Math.max(chessNode, game.lastNode);\r\n                                    for (var i = min; i < max; i = i + 5) {\r\n                                        if (game.occupied.indexOf(i) != -1) {\r\n                                            alert(\"不能跨越其他棋子！\");\r\n                                            chessList[game.lastNode].opacity = 255;\r\n                                            game.prepare = 0;\r\n                                            return false;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (chessList[chessNode].position.y == chessList[game.lastNode].position.y) {\r\n                                    var min = Math.min(chessNode, game.lastNode) + 1;\r\n                                    var max = Math.max(chessNode, game.lastNode);\r\n                                    for (var i = min; i < max; i++) {\r\n                                        if (game.occupied.indexOf(i) != -1) {\r\n                                            alert(\"不能跨越其他棋子！\");\r\n                                            chessList[game.lastNode].opacity = 255;\r\n                                            game.prepare = 0;\r\n                                            return false;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (chessList[chessNode].position.x != chessList[game.lastNode].position.x && chessList[chessNode].position.y != chessList[game.lastNode].position.y) {\r\n                                    alert(\"不能沿斜线移动棋子！\");\r\n                                    chessList[game.lastNode].opacity = 255;\r\n                                    game.prepare = 0;\r\n                                    return false;\r\n                                }\r\n                            }\r\n                            //目标棋子节点显示，上一棋子节点透明\r\n                            console.log(game.occupiedcolor[chessNode]);\r\n                            if (game.gameState == 'white' && game.occupiedcolor[game.lastNode] == 1) {\r\n                                chessList[chessNode].getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(cc.url.raw('resources/whitechess.png'));\r\n                                chessList[chessNode].opacity = 255;\r\n                                chessList[game.lastNode].opacity = 0;\r\n                                game.occupiedcolor[chessNode] = 1;\r\n                                if (game.occupied.indexOf(chessNode) == -1) {\r\n                                    game.occupied.push(chessNode);\r\n                                }\r\n                                //将颜色列表中上一棋子颜色改为0\r\n                                game.occupiedcolor[game.lastNode] = 0;\r\n                                //将上一棋子节点从occupied中删除\r\n                                for (var k = 0; k < game.occupied.length; k++) {\r\n                                    if (game.occupied[k] == game.lastNode) {\r\n                                        game.occupied.splice(k, 1);\r\n                                    }\r\n                                }\r\n                                game.prepare = 0;\r\n                                //判断吃子\r\n                                game.eatchess(chessNode, game, chessList);\r\n                                game.gameState = 'black';\r\n                                //判断胜负\r\n                                game.judgeover(game,self);\r\n\r\n                            } else if (game.gameState == 'black' && game.occupiedcolor[game.lastNode] == 2) {\r\n                                chessList[chessNode].getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(cc.url.raw('resources/blackchess.png'));\r\n                                chessList[chessNode].opacity = 255;\r\n                                chessList[game.lastNode].opacity = 0;\r\n                                game.occupiedcolor[chessNode] = 2;\r\n                                if (game.occupied.indexOf(chessNode) == -1) {\r\n                                    game.occupied.push(chessNode);\r\n                                }\r\n                                game.occupiedcolor[game.lastNode] = 0;\r\n                                for (var k = 0; k < game.occupied.length; k++) {\r\n                                    if (game.occupied[k] == game.lastNode) {\r\n                                        game.occupied.splice(k, 1);\r\n                                    }\r\n                                }\r\n                                game.prepare = 0;\r\n                                //判断吃子\r\n                                game.eatchess(chessNode, game, chessList);\r\n                                game.gameState = 'white';\r\n                                //判断胜负\r\n                                game.judgeover(game,self);\r\n                            } else {\r\n                                alert(\"此轮为对方执棋\");\r\n                                chessList[game.lastNode].opacity = 255;\r\n                                game.prepare = 0;\r\n                                return false;\r\n                            }\r\n                        } else if (game.occupied.indexOf(chessNode) == -1) {\r\n                            game.prepare = 0;\r\n                        }\r\n\r\n                    }\r\n                });\r\n            };\r\n        };\r\n        //初始化棋盘\r\n        for (var i = 0; i < 5; i++) {\r\n            chessList[i + 1].opacity = 255;\r\n            chessList[25 - i].opacity = 255;\r\n            chessList[25 - i].getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(cc.url.raw('resources/whitechess.png'));\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start() {\r\n        this.chessinit();\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}