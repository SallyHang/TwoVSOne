{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\click.js"],"names":["cc","Class","extends","Component","properties","chessPrefab","default","type","Prefab","whitechessPrefab","touchChess","Node","visible","setInputControl","self","chessList","y","x","newNode","instantiate","node","addChild","setPosition","p","width","height","setContentSize","opacity","on","EventType","MOUSE_DOWN","event","distance","i","d","pDistance","v2","getLocationX","getLocationY","convertToWorldSpaceAR","push","min","minpos","j","start"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,qBAAY,EAAC;AACTC,qBAAQ,IADA;AAERC,kBAAKP,GAAGQ;AAFA,SADJ;AAKRC,0BAAiB,EAAC;AACdH,qBAAQ,IADK;AAEbC,kBAAKP,GAAGQ;AAFK,SALT;;AAURE,oBAAW,EAAC;AACRJ,qBAAQ,IADD;AAEPC,kBAAKP,GAAGW,IAFD;AAGPC,qBAAQ,KAHD,CAGM;AAHN;AAVH,KAHP;AAmBLC,qBAAiB,2BAAY;AACzB,YAAIC,OAAO,IAAX;AACA,YAAIC,YAAY,CAACf,GAAGW,IAAJ,CAAhB,CAFyB,CAEC;AAC1B,aAAI,IAAIK,IAAI,CAAZ,EAAcA,IAAE,CAAhB,EAAkBA,GAAlB,EAAsB;AAClB,iBAAI,IAAIC,IAAI,CAAZ,EAAcA,IAAI,CAAlB,EAAoBA,GAApB,EAAwB;AACpB,oBAAIC,UAAUlB,GAAGmB,WAAH,CAAe,KAAKd,WAApB,CAAd,CADoB,CAC2B;AAC/C,qBAAKe,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACAA,wBAAQI,WAAR,CAAoBtB,GAAGuB,CAAH,CAAKN,KAAG,KAAKG,IAAL,CAAUI,KAAV,GAAgB,CAAnB,CAAL,EAA2BR,KAAG,KAAKI,IAAL,CAAUK,MAAV,GAAiB,CAApB,CAA3B,CAApB,EAHoB,CAGoD;AACxEP,wBAAQQ,cAAR,CAAuB,KAAKN,IAAL,CAAUI,KAAV,GAAgB,CAAvC,EAA0C,KAAKJ,IAAL,CAAUK,MAAV,GAAiB,CAA3D;AACAP,wBAAQS,OAAR,GAAkB,CAAlB;AACA;AACAT,wBAAQU,EAAR,CAAW5B,GAAGW,IAAH,CAAQkB,SAAR,CAAkBC,UAA7B,EAAwC,UAASC,KAAT,EAAe;AACnD,wBAAIC,WAAW,EAAf;AACA,yBAAI,IAAIC,IAAI,CAAZ,EAAcA,IAAE,EAAhB,EAAmBA,GAAnB,EAAuB;AACnB;AACA;AACA,4BAAIC,IAAIlC,GAAGmC,SAAH,CAAanC,GAAGoC,EAAH,CAAML,MAAMM,YAAN,EAAN,EAA4BN,MAAMO,YAAN,EAA5B,CAAb,EAAgEvB,UAAUkB,IAAE,CAAZ,EAAeM,qBAAf,CAAqCvC,GAAGoC,EAAH,CAAM,CAAN,EAAS,CAAT,CAArC,CAAhE,CAAR;AACAJ,iCAASQ,IAAT,CAAcN,CAAd;AACH;AACD,wBAAIO,MAAMT,SAAS,CAAT,CAAV;AACA,wBAAIU,SAAS,CAAb;AACA;AACA,yBAAI,IAAIC,IAAI,CAAZ,EAAcA,IAAE,EAAhB,EAAmBA,GAAnB,EAAuB;AACnB,4BAAGX,SAASW,CAAT,IAAYF,GAAf,EAAmB;AACfA,kCAAMT,SAASW,CAAT,CAAN;AACAD,qCAASC,CAAT;AACH;AACJ;AACD;AACA5B,8BAAU2B,SAAO,CAAjB,EAAoBf,OAApB,GAA8B,GAA9B;AACH,iBAnBD;AAoBAZ,0BAAUyB,IAAV,CAAetB,OAAf;AACH;AACJ;AACJ,KArDI;AAsDL;;AAEA;;AAEA0B,SA1DK,mBA0DI;AACL,aAAK/B,eAAL;AACH;AA5DI;;AA8DL;AA9DJ","file":"click.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        chessPrefab:{//棋子的预制资源\r\n            default:null,\r\n            type:cc.Prefab\r\n        },\r\n        whitechessPrefab:{//棋子的预制资源\r\n            default:null,\r\n            type:cc.Prefab\r\n        },\r\n\r\n        touchChess:{//每一回合落下的棋子\r\n            default:null,\r\n            type:cc.Node,\r\n            visible:false//属性窗口不显示\r\n        },\r\n    },\r\n    setInputControl: function () {\r\n        var self = this;\r\n        var chessList = [cc.Node];//棋子从下标1开始           \r\n        for(var y = 0;y<5;y++){\r\n            for(var x = 0;x < 5;x++){\r\n                var newNode = cc.instantiate(this.chessPrefab);//复制Chess预制资源\r\n                this.node.addChild(newNode);\r\n                newNode.setPosition(cc.p(x*(this.node.width/4),y*(this.node.height/4)));//根据棋盘和棋子大小计算使每个棋子节点位于指定位置\r\n                newNode.setContentSize(this.node.width/8, this.node.height/8);\r\n                newNode.opacity = 0;\r\n                //鼠标点击监听\r\n                newNode.on(cc.Node.EventType.MOUSE_DOWN,function(event){\r\n                    var distance = []; \r\n                    for(var i = 0;i<25;i++){\r\n                        //计算鼠标点击位置和各棋子节点之间的距离\r\n                        //将棋子节点的坐标转化为世界坐标系\r\n                        var d = cc.pDistance(cc.v2(event.getLocationX(), event.getLocationY()), chessList[i+1].convertToWorldSpaceAR(cc.v2(0, 0)));\r\n                        distance.push(d);\r\n                    };\r\n                    var min = distance[0];\r\n                    var minpos = 0;\r\n                    //取距离最近的下标，即棋子节点位置\r\n                    for(var j = 1;j<25;j++){                        \r\n                        if(distance[j]<min){\r\n                            min = distance[j]\r\n                            minpos = j;\r\n                        }\r\n                    }\r\n                    //显示此棋子节点\r\n                    chessList[minpos+1].opacity = 255;\r\n                });\r\n                chessList.push(newNode);\r\n            };\r\n        };\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        this.setInputControl();\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}